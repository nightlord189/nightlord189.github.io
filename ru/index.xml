<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Алексей Буравов</title>
    <link>https://nldevelop.com/ru/</link>
    <description>Recent content on Алексей Буравов</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language>
    <lastBuildDate>Mon, 28 Feb 2022 02:31:26 +0600</lastBuildDate><atom:link href="https://nldevelop.com/ru/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Одобрение, кредиты и регулирование</title>
      <link>https://nldevelop.com/ru/posts/credit-approval/</link>
      <pubDate>Mon, 28 Feb 2022 02:31:26 +0600</pubDate>
      
      <guid>https://nldevelop.com/ru/posts/credit-approval/</guid>
      <description>Хотел бы высказать тут пару мыслей о кредитной сфере.
Дисклеймер: я буду говорить только на основе собственных наблюдений во время жизни и работы в Казахстане. Вполне вероятно, то, о чем я говорю, уже давно где-то реализовано.
Предварительное одобрение Я регулярно сталкиваюсь в своей жизни с таким термином как &amp;ldquo;предварительное одобрение&amp;rdquo;. Например, вы клиент банка А. И однажды вам приходит смс (или звонит менеджер) от банка с примерно таким текстом:
 Уважаемый {CLIENT_NAME}!</description>
    </item>
    
    <item>
      <title>Сборка Golang-приложения в Docker</title>
      <link>https://nldevelop.com/ru/posts/go-docker/</link>
      <pubDate>Sun, 08 Aug 2021 19:23:14 +0600</pubDate>
      
      <guid>https://nldevelop.com/ru/posts/go-docker/</guid>
      <description>Допустим, мы написали сервис на Go. И теперь хотим его собрать в формате Docker-контейнера.
1. Пишем простой Dockerfile:
# Базовый образ, содержащий установленный GoFROMgolang:alpine# Копируем все файлы из корня проекта в образ# Если нужно копировать не все, то можно это указать в файле .dockerignoreCOPY . .# Запускаем скачивание всех зависимостей (если у нас проект на модулях)RUN go mod download# Собираем бинарникRUN GO111MODULE=on CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o main .# Указываем, что приложению требуется 8080 портEXPOSE8080# Запускаем приложениеENTRYPOINT [&amp;#34;/main&amp;#34;]2.</description>
    </item>
    
    <item>
      <title>Проще - лучше</title>
      <link>https://nldevelop.com/ru/posts/kiss/</link>
      <pubDate>Mon, 02 Aug 2021 01:08:18 +0600</pubDate>
      
      <guid>https://nldevelop.com/ru/posts/kiss/</guid>
      <description>Хочу тут привести пару своих мыслей по поводу усложнения и увеличения абстракций в программировании, а также использования разных технологий.
Я последнее время начинаю думать, что лучше писать максимально &amp;ldquo;дубово&amp;rdquo; и просто, чем наворачивать кучу слоев абстракций в надежде на будущую универсализацию. А также всегда обязательно думать головой и не переусложнять без нужды. Пойдем по пунктам. Примеры буду приводить на Go, т.к. больше пишу на нем, но в той или иной степени это касается любого языка.</description>
    </item>
    
    <item>
      <title>Console tips &amp; tricks</title>
      <link>https://nldevelop.com/ru/posts/console-tips/</link>
      <pubDate>Sun, 01 Aug 2021 23:05:42 +0600</pubDate>
      
      <guid>https://nldevelop.com/ru/posts/console-tips/</guid>
      <description>Буду дополнять сюда разные очевидные и не очень консольные команды, которые использую/использовал.
Docker  сборка образа: docker build -t user/some.service:latest . push в registry: docker push user/some.service:latest pull: docker pull user/some.service:latest запуск: docker run -d -p 3001:3000 --restart always --name some.service user/some.service:latest запуск с bash: docker run --rm -it --entrypoint bash &amp;lt;image&amp;gt; remove all images: docker rmi -f $(docker images -q) удалить контейнеры:	docker rm -f $(docker ps -a -q) удалить все volume:	docker volume rm $(docker volume ls -q) скопировать файл в контейнер: docker cp &amp;lt;filename&amp;gt; &amp;lt;container&amp;gt;:&amp;lt;filename&amp;gt; подключиться к контейнеру: docker exec -it &amp;lt;container&amp;gt; /bin/bash при установке пакетов в ubuntu-контейнер может потребоваться установить  ARG DEBIAN_FRONTEND=noninteractive Сборка  заменить значение в json-файле (предварительно нужно установить утилиту jq):</description>
    </item>
    
    <item>
      <title>Настройка SSH и установка PostgreSQL на VPS</title>
      <link>https://nldevelop.com/ru/posts/setup-ssh-postgresql/</link>
      <pubDate>Tue, 06 Apr 2021 00:32:32 +0600</pubDate>
      
      <guid>https://nldevelop.com/ru/posts/setup-ssh-postgresql/</guid>
      <description>Тут вкратце расскажу об аренде и начальной настройке VPS, а также установке PostgreSQL. Если это все вы делаете с закрытыми глазами - закрывайте :)
Аренда VPS Тут все зависит от вашего провайдера. Здесь и далее я буду показывать примеры с Hetzner.
  Регистрируемся на (https://www.hetzner.com).
  Заходим в кабинет Cloud, выбираем дефолтный проект или создаем новый:   Нажимаем &amp;ldquo;Add Server&amp;rdquo;, настраиваем нужную конфигурацию (расположение, ОС, тип, volume, название и др.</description>
    </item>
    
    <item>
      <title>Экзамены и срезы в классическом образовании</title>
      <link>https://nldevelop.com/ru/posts/exams/</link>
      <pubDate>Fri, 05 Mar 2021 01:14:29 +0600</pubDate>
      
      <guid>https://nldevelop.com/ru/posts/exams/</guid>
      <description>Решил сформулировать тут свои некие правила проведения срезов, экзаменов и вообще любых проверок с вариантами ответа.
 Правило 1: тест должен составляться так, что если ты прослушал все (или большинство) лекций хотя бы по одному разу, то тест либо экзамен ты должен сдавать на 90%, не задумываясь (не особо напрягая мозг и память).
 Пример плохого вопроса, не соответствующего этому правилу (предположим, речь идет о курсе по основам HTTP-протокола):
1. Какое назначение у статус-кода 425:</description>
    </item>
    
    <item>
      <title>Установка ELK</title>
      <link>https://nldevelop.com/ru/posts/setup-elk/</link>
      <pubDate>Thu, 04 Mar 2021 13:55:09 +0600</pubDate>
      
      <guid>https://nldevelop.com/ru/posts/setup-elk/</guid>
      <description>Поднял я тут на днях для своих проектов ElasticSearch + Kibana на VPS, так что запишу сюда, что делал и что получилось.
Цель изначально была - начать переписывать один мой проект, который давно поддерживаю. Но с чего начать чистый лист нового бэкенда? Конечно с логов! А куда сейчас логируют модные посоны? В Elastic.
Сперва я поднял все это дело локально на Windows 10 в Docker. И оно поднялось и заработало! Правда, выжрало немало так RAM и я впервые увидел потребление 15/16 гб на ноуте.</description>
    </item>
    
    <item>
      <title>Будущее платформ онлайн-образования</title>
      <link>https://nldevelop.com/ru/posts/elearning/</link>
      <pubDate>Mon, 12 Oct 2020 01:28:55 +0600</pubDate>
      
      <guid>https://nldevelop.com/ru/posts/elearning/</guid>
      <description>Периодически прохожу курсы на платформе Udemy, но у них есть существенный минус - почти нет практических заданий, только видеокурсы.
Думаю, будущее за той платформой, которая позволит преподавателю быстро создавать практические задания не только в формате тестов, но и в формате автоматических проверок кода по типу Hexlet (пишешь код по задаче прямо в браузере, отправляешь на проверку, автоматические тесты проверяет, удовлетворяет ли твой код тестам).</description>
    </item>
    
    <item>
      <title>Фронтенд с человеческим лицом</title>
      <link>https://nldevelop.com/ru/posts/human-frontend/</link>
      <pubDate>Sun, 11 Oct 2020 21:38:16 +0600</pubDate>
      
      <guid>https://nldevelop.com/ru/posts/human-frontend/</guid>
      <description>Тут я бы хотел просто процитировать этот великолепный комментарий, который полностью поддерживаю. Особенно про вывод значений из поиска и перехват ошибок http-запросов.
 Ключевое правило: Дайте пользователю поля ввода и не суйте в них рыло! Ничего так не бесит пользователя, как ваши «сверхценные» действия, мешающие ему, например, залогиниться или вбить строку в поиск. Засуньте в жопу свои куки. Не спрашивайте из какого он города — могли бы, скоты, уже запомнить: загляните в свою жопу, там где куки, и подумайте зачем они вам, если хранятся только до конца сессии.</description>
    </item>
    
    <item>
      <title>Двухфакторная аутентификация</title>
      <link>https://nldevelop.com/ru/posts/2fa/</link>
      <pubDate>Thu, 01 Oct 2020 16:53:17 +0600</pubDate>
      
      <guid>https://nldevelop.com/ru/posts/2fa/</guid>
      <description>В этой заметке хочу выразить свое мнение по поводу двухфакторной аутентификации вообще и телефонной в частности.
В последние годы ее вставляют абсолютно везде: в интернет-банкинге, мобильных приложениях, во входе на сайтах и т.д. Вспомним вообще, что это такое. Обычная однофакторная аутентификация - когда мы входим, например, на сайт по паролю или какому-нибудь usb-токену, или биометрии, или FaceID. Двухфакторная - когда мы дополнительно используем второй фактор для подтверждения входа. Чаще всего это СМС (хотя сейчас он уже признается небезопасным каналом).</description>
    </item>
    
    <item>
      <title>Контакты</title>
      <link>https://nldevelop.com/ru/contact/</link>
      <pubDate>Thu, 01 Oct 2020 16:47:47 +0600</pubDate>
      
      <guid>https://nldevelop.com/ru/contact/</guid>
      <description>email: aburavov189@gmail.com</description>
    </item>
    
    <item>
      <title>РЕЗЮМЕ</title>
      <link>https://nldevelop.com/ru/cv/</link>
      <pubDate>Thu, 01 Oct 2020 09:07:52 +0600</pubDate>
      
      <guid>https://nldevelop.com/ru/cv/</guid>
      <description>Опыт работы TalentTech
 Разработчик Декабрь 2021 – настоящее время Разработка проекта Адаптации (SNAMI). Golang, PostgreSQL.  Halyk Bank
 Разработчик Август 2019 – Декабрь 2021 Разработка микросервисов на Go (Gin, GORM), C# Работа с BPM Camunda, разработка и сопровождение схем, написание скриптов. Разработка и сопровождение проектов ЕНКП и интеграции с ЕНПФ. Постановка задач, код-ревью, участие в образовательном совместном проекте с МУИТ. Golang, Camunda BPM, .NET.Core, PostgreSQL  Samgau
 Разработчик Апрель 2019 – Июль 2019 Участвовал в разработке и поддержке портала Almaty-KSK для интеграции жителей, КСК и городской администрации в единую систему.</description>
    </item>
    
    <item>
      <title>О себе</title>
      <link>https://nldevelop.com/ru/about/</link>
      <pubDate>Thu, 01 Oct 2020 09:02:17 +0600</pubDate>
      
      <guid>https://nldevelop.com/ru/about/</guid>
      <description>Разработчик программного обеспечения из города Алматы, Казахстан.
Проще - лучше.</description>
    </item>
    
  </channel>
</rss>
