<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dockerfile on Алексей Буравов</title>
    <link>https://nldevelop.com/ru/tags/dockerfile/</link>
    <description>Recent content in Dockerfile on Алексей Буравов</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language>
    <lastBuildDate>Sun, 08 Aug 2021 19:23:14 +0600</lastBuildDate><atom:link href="https://nldevelop.com/ru/tags/dockerfile/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Сборка Golang-приложения в Docker</title>
      <link>https://nldevelop.com/ru/posts/go-docker/</link>
      <pubDate>Sun, 08 Aug 2021 19:23:14 +0600</pubDate>
      
      <guid>https://nldevelop.com/ru/posts/go-docker/</guid>
      <description>Допустим, мы написали сервис на Go. И теперь хотим его собрать в формате Docker-контейнера.
1. Пишем простой Dockerfile:
# Базовый образ, содержащий установленный GoFROMgolang:alpine# Копируем все файлы из корня проекта в образ# Если нужно копировать не все, то можно это указать в файле .dockerignoreCOPY . .# Запускаем скачивание всех зависимостей (если у нас проект на модулях)RUN go mod download# Собираем бинарникRUN GO111MODULE=on CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o main .# Указываем, что приложению требуется 8080 портEXPOSE8080# Запускаем приложениеENTRYPOINT [&amp;#34;/main&amp;#34;]2.</description>
    </item>
    
  </channel>
</rss>
